## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Gestion des couleurs'
description: |-

  APIs pour la gestion des couleurs
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/colors
    metadata:
      groupName: 'Gestion des couleurs'
      groupDescription: |-

        APIs pour la gestion des couleurs
      subgroup: ''
      subgroupDescription: ''
      title: 'Lister toutes les couleurs'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer VPg68Efdkc413vDhZbaea56'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/colors
    metadata:
      groupName: 'Gestion des couleurs'
      groupDescription: |-

        APIs pour la gestion des couleurs
      subgroup: ''
      subgroupDescription: ''
      title: 'Ajouter une couleur'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      label:
        name: label
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: true
        example: vipdb
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: ''
        required: false
        example: 'Aut id eum id ut molestiae consequatur eligendi.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      label: vipdb
      description: 'Aut id eum id ut molestiae consequatur eligendi.'
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer gdcZ51Pvb36eha68V4fEakD'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/colors/{id}'
    metadata:
      groupName: 'Gestion des couleurs'
      groupDescription: |-

        APIs pour la gestion des couleurs
      subgroup: ''
      subgroupDescription: ''
      title: 'Afficher une couleur'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the color.'
        required: true
        example: laudantium
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: laudantium
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer c4Dbafg53Z81Eav6hVdPke6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/colors/{id}'
    metadata:
      groupName: 'Gestion des couleurs'
      groupDescription: |-

        APIs pour la gestion des couleurs
      subgroup: ''
      subgroupDescription: ''
      title: 'Mettre à jour une couleur'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the color.'
        required: true
        example: minus
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: minus
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      label:
        name: label
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: true
        example: bculylfyoazhlo
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: ''
        required: false
        example: 'Velit ea dolore assumenda ab dolor consequatur recusandae.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      label: bculylfyoazhlo
      description: 'Velit ea dolore assumenda ab dolor consequatur recusandae.'
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 5D3vdcbVZaa4e6fhkEgP861'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/colors/{id}'
    metadata:
      groupName: 'Gestion des couleurs'
      groupDescription: |-

        APIs pour la gestion des couleurs
      subgroup: ''
      subgroupDescription: ''
      title: 'Supprimer une couleur'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the color.'
        required: true
        example: quo
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: quo
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 1eg3DdcavZ686Pb5hakE4fV'
    controller: null
    method: null
    route: null
    custom: []
