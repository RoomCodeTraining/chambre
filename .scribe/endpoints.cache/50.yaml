## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Gestion des types de photos'
description: |-

  APIs pour la gestion des types de photos
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/photo-types
    metadata:
      groupName: 'Gestion des types de photos'
      groupDescription: |-

        APIs pour la gestion des types de photos
      subgroup: ''
      subgroupDescription: ''
      title: 'Lister tous les types de photos'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer E6ZkavVhDgPf35e6184adcb'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/photo-types
    metadata:
      groupName: 'Gestion des types de photos'
      groupDescription: |-

        APIs pour la gestion des types de photos
      subgroup: ''
      subgroupDescription: ''
      title: 'Créer un type de photo'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      label:
        name: label
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: true
        example: gxtasgfveoftgelu
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: false
        example: 'Est quas aliquid eveniet accusantium qui.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      label: gxtasgfveoftgelu
      description: 'Est quas aliquid eveniet accusantium qui.'
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer c634gebdVh51vf8aEZ6kaDP'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/photo-types/{photoType_id}'
    metadata:
      groupName: 'Gestion des types de photos'
      groupDescription: |-

        APIs pour la gestion des types de photos
      subgroup: ''
      subgroupDescription: ''
      title: 'Afficher un type de photo'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      photoType_id:
        name: photoType_id
        description: 'The ID of the photoType.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      photoType_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer ZadhkDav6EVg65eb8c143fP'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/photo-types/{photoType}'
    metadata:
      groupName: 'Gestion des types de photos'
      groupDescription: |-

        APIs pour la gestion des types de photos
      subgroup: ''
      subgroupDescription: ''
      title: 'Mettre à jour un type de photo'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      photoType:
        name: photoType
        description: ''
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      photoType: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      label:
        name: label
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: true
        example: qendjjl
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: false
        example: 'Architecto voluptates perspiciatis ratione aspernatur quibusdam commodi omnis.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      label: qendjjl
      description: 'Architecto voluptates perspiciatis ratione aspernatur quibusdam commodi omnis.'
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer gaf368hDV5ecZadE64v1kPb'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/photo-types/{photoType_id}'
    metadata:
      groupName: 'Gestion des types de photos'
      groupDescription: |-

        APIs pour la gestion des types de photos
      subgroup: ''
      subgroupDescription: ''
      title: 'Supprimer un type de photo'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      photoType_id:
        name: photoType_id
        description: 'The ID of the photoType.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      photoType_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer agk6dVEc6e843bPh5Zvfa1D'
    controller: null
    method: null
    route: null
    custom: []
