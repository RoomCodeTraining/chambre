## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Gestion des rattachements réparateurs'
description: |-

  APIs pour la gestion des rattachements réparateurs
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/repairer-relationships
    metadata:
      groupName: 'Gestion des rattachements réparateurs'
      groupDescription: |-

        APIs pour la gestion des rattachements réparateurs
      subgroup: ''
      subgroupDescription: ''
      title: 'Lister tous les rattachements réparateurs'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer vE3DcZgPdhe54Vb6ak6fa18'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/repairer-relationships
    metadata:
      groupName: 'Gestion des rattachements réparateurs'
      groupDescription: |-

        APIs pour la gestion des rattachements réparateurs
      subgroup: ''
      subgroupDescription: ''
      title: 'Créer un rattachement réparateur'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      repairer_id:
        name: repairer_id
        description: 'The <code>id</code> of an existing record in the entities table.'
        required: true
        example: soluta
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      repairer_id: soluta
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 8EPh3ckbvD45gZad6f61Vea'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/repairer-relationships/{repairerRelationship_id}'
    metadata:
      groupName: 'Gestion des rattachements réparateurs'
      groupDescription: |-

        APIs pour la gestion des rattachements réparateurs
      subgroup: ''
      subgroupDescription: ''
      title: 'Afficher un rattachement réparateur'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      repairerRelationship_id:
        name: repairerRelationship_id
        description: 'The ID of the repairerRelationship.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      repairerRelationship_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer DbfP163hEve45gZkcVada68'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/repairer-relationships/{repairerRelationship_id}'
    metadata:
      groupName: 'Gestion des rattachements réparateurs'
      groupDescription: |-

        APIs pour la gestion des rattachements réparateurs
      subgroup: ''
      subgroupDescription: ''
      title: 'Mettre à jour un rattachement réparateur'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      repairerRelationship_id:
        name: repairerRelationship_id
        description: 'The ID of the repairerRelationship.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      repairerRelationship_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Zdkv3hEf6VaePb48c6gD15a'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/repairer-relationships/{repairerRelationship_id}/enable'
    metadata:
      groupName: 'Gestion des rattachements réparateurs'
      groupDescription: |-

        APIs pour la gestion des rattachements réparateurs
      subgroup: ''
      subgroupDescription: ''
      title: 'Activer un rattachement réparateur'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      repairerRelationship_id:
        name: repairerRelationship_id
        description: 'The ID of the repairerRelationship.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      repairerRelationship_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer hgVkfPaa516E6e4bvdDcZ38'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/repairer-relationships/{repairerRelationship_id}/disable'
    metadata:
      groupName: 'Gestion des rattachements réparateurs'
      groupDescription: |-

        APIs pour la gestion des rattachements réparateurs
      subgroup: ''
      subgroupDescription: ''
      title: 'Désactiver un rattachement réparateur'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      repairerRelationship_id:
        name: repairerRelationship_id
        description: 'The ID of the repairerRelationship.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      repairerRelationship_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer PvZVa1cd86Dbgk63feah5E4'
    controller: null
    method: null
    route: null
    custom: []
