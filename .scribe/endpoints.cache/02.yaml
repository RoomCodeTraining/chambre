## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Gestion des utilisateurs'
description: |-

  APIs pour la gestion des utilisateurs
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/users
    metadata:
      groupName: 'Gestion des utilisateurs'
      groupDescription: |-

        APIs pour la gestion des utilisateurs
      subgroup: ''
      subgroupDescription: ''
      title: 'Lister les utilisateurs'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer c61Db4faE685dhZkV3ePvga'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/users/{id}'
    metadata:
      groupName: 'Gestion des utilisateurs'
      groupDescription: |-

        APIs pour la gestion des utilisateurs
      subgroup: ''
      subgroupDescription: ''
      title: 'Afficher un utilisateur'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: facilis
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: facilis
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3P65ehc1afdVkZE4vgD8ab6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/users
    metadata:
      groupName: 'Gestion des utilisateurs'
      groupDescription: |-

        APIs pour la gestion des utilisateurs
      subgroup: ''
      subgroupDescription: ''
      title: 'Créer un nouvel utilisateur'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      code:
        name: code
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: true
        example: ohhtdstizojqtmkjotnyop
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      email:
        name: email
        description: 'Must match the regex /^[a-zA-Z0-9._%+\-]+@[a-zA-Z0-9.\-]+\.[a-zA-Z]{2,}$/. Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: true
        example: ryan05@example.org
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      first_name:
        name: first_name
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: true
        example: ujmawgmtmeopnfffmqgiiar
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      last_name:
        name: last_name
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: true
        example: dyhww
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      telephone:
        name: telephone
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: false
        example: insimivb
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      entity_id:
        name: entity_id
        description: 'The <code>id</code> of an existing record in the entities table.'
        required: true
        example: aliquam
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      role:
        name: role
        description: 'The <code>name</code> of an existing record in the roles table.'
        required: true
        example: saepe
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password:
        name: password
        description: 'Le texte de value ne peut pas contenir plus de 100 caractères.'
        required: false
        example: 'lbK~,ztDo$%:'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      code: ohhtdstizojqtmkjotnyop
      email: ryan05@example.org
      first_name: ujmawgmtmeopnfffmqgiiar
      last_name: dyhww
      telephone: insimivb
      entity_id: aliquam
      role: saepe
      password: 'lbK~,ztDo$%:'
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer P5Vaka48ec1dvbDgh66EZf3'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/users/{id}'
    metadata:
      groupName: 'Gestion des utilisateurs'
      groupDescription: |-

        APIs pour la gestion des utilisateurs
      subgroup: ''
      subgroupDescription: ''
      title: "Mettre à jour un utilisateur les informations de l'utilisateur"
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: rerum
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: rerum
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      code:
        name: code
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: true
        example: kudcmqd
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      first_name:
        name: first_name
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: true
        example: vrxwhncczwgpdhaempxqo
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      last_name:
        name: last_name
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: true
        example: jrhpxnnqavne
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      email:
        name: email
        description: 'Must match the regex /^[a-zA-Z0-9._%+\-]+@[a-zA-Z0-9.\-]+\.[a-zA-Z]{2,}$/. Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: true
        example: rempel.jermey@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      telephone:
        name: telephone
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: false
        example: nrbbnsqhptwjzvaih
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      role:
        name: role
        description: 'The <code>name</code> of an existing record in the roles table.'
        required: true
        example: non
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      signature:
        name: signature
        description: 'Le champ value doit être une image. La taille du fichier de value ne peut pas dépasser 2048 kilo-octets.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      current_password:
        name: current_password
        description: 'Le texte de value ne peut pas contenir plus de 100 caractères.'
        required: false
        example: gbwlstugbjuzasgz
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      password:
        name: password
        description: 'Le texte de value ne peut pas contenir plus de 100 caractères.'
        required: false
        example: 'd_{[$zdJdA'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      password_confirmation:
        name: password_confirmation
        description: 'Le texte de value ne peut pas contenir plus de 100 caractères.'
        required: false
        example: mwtvcanmzclvyxuhiligxfy
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      code: kudcmqd
      first_name: vrxwhncczwgpdhaempxqo
      last_name: jrhpxnnqavne
      email: rempel.jermey@example.com
      telephone: nrbbnsqhptwjzvaih
      role: non
      current_password: gbwlstugbjuzasgz
      password: 'd_{[$zdJdA'
      password_confirmation: mwtvcanmzclvyxuhiligxfy
    fileParameters:
      signature: null
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 31aEhkVf68vDdb5gcaPZ64e'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/users/{id}/enable'
    metadata:
      groupName: 'Gestion des utilisateurs'
      groupDescription: |-

        APIs pour la gestion des utilisateurs
      subgroup: ''
      subgroupDescription: ''
      title: 'Activer un utilisateur'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: ratione
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: ratione
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 56V4a3gZabEDfhe1Pk6vc8d'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/users/{id}/disable'
    metadata:
      groupName: 'Gestion des utilisateurs'
      groupDescription: |-

        APIs pour la gestion des utilisateurs
      subgroup: ''
      subgroupDescription: ''
      title: 'Désactiver un utilisateur'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: molestiae
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: molestiae
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer aceEb8vgdhP64D6f15Za3Vk'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/users/{id}/reset'
    metadata:
      groupName: 'Gestion des utilisateurs'
      groupDescription: |-

        APIs pour la gestion des utilisateurs
      subgroup: ''
      subgroupDescription: ''
      title: "Réinitialiser le mot de passe d'un utilisateur par un administrateur"
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: odio
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: odio
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer kcPgha4e5vba8dE6f13ZDV6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/users/update/profile
    metadata:
      groupName: 'Gestion des utilisateurs'
      groupDescription: |-

        APIs pour la gestion des utilisateurs
      subgroup: ''
      subgroupDescription: ''
      title: "Mettre à jour les informations de l'utilisateur de profil de l'utilisateur connecté"
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      code:
        name: code
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: true
        example: wnej
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      first_name:
        name: first_name
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: true
        example: qwuq
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      last_name:
        name: last_name
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: true
        example: mgbgvwesdbwrdanthf
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      email:
        name: email
        description: 'Must match the regex /^[a-zA-Z0-9._%+\-]+@[a-zA-Z0-9.\-]+\.[a-zA-Z]{2,}$/. Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: true
        example: lubowitz.susanna@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      telephone:
        name: telephone
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: false
        example: emm
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      role:
        name: role
        description: 'The <code>name</code> of an existing record in the roles table.'
        required: true
        example: possimus
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      signature:
        name: signature
        description: 'Le champ value doit être une image. La taille du fichier de value ne peut pas dépasser 2048 kilo-octets.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      current_password:
        name: current_password
        description: 'Le texte de value ne peut pas contenir plus de 100 caractères.'
        required: false
        example: mzthmenqrpmbxau
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      password:
        name: password
        description: 'Le texte de value ne peut pas contenir plus de 100 caractères.'
        required: false
        example: 'O6/@(sI/*2CKh&|R-1'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      password_confirmation:
        name: password_confirmation
        description: 'Le texte de value ne peut pas contenir plus de 100 caractères.'
        required: false
        example: uymvabt
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      code: wnej
      first_name: qwuq
      last_name: mgbgvwesdbwrdanthf
      email: lubowitz.susanna@example.net
      telephone: emm
      role: possimus
      current_password: mzthmenqrpmbxau
      password: 'O6/@(sI/*2CKh&|R-1'
      password_confirmation: uymvabt
    fileParameters:
      signature: null
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer fPdvEgV8ehZa6cb6k51a34D'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/users/{id}/reset-user-password'
    metadata:
      groupName: 'Gestion des utilisateurs'
      groupDescription: |-

        APIs pour la gestion des utilisateurs
      subgroup: ''
      subgroupDescription: ''
      title: "Modifier les informations d'un utilisateur connecté par lui-même"
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: eum
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: eum
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Le champ value doit être une adresse e-mail valide. Must match the regex /^[a-zA-Z0-9._%+\-]+@[a-zA-Z0-9.\-]+\.[a-zA-Z]{2,}$/. Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: true
        example: kshlerin.dixie@example.org
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      first_name:
        name: first_name
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: true
        example: xappypczy
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      last_name:
        name: last_name
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: true
        example: ypjzcgndtkhvjnrxnprz
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      telephone:
        name: telephone
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: false
        example: crbdyrljswclnryyke
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      signature:
        name: signature
        description: 'Le champ value doit être une image. La taille du fichier de value ne peut pas dépasser 2048 kilo-octets.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      current_password:
        name: current_password
        description: 'Le texte de value ne peut pas contenir plus de 100 caractères.'
        required: false
        example: gyzdqelftxbydmfnhkhprrctk
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      password:
        name: password
        description: 'Le texte de value ne peut pas contenir plus de 100 caractères.'
        required: false
        example: '"h20qf"CM]m'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      password_confirmation:
        name: password_confirmation
        description: 'Le texte de value ne peut pas contenir plus de 100 caractères.'
        required: false
        example: qwotjluf
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      email: kshlerin.dixie@example.org
      first_name: xappypczy
      last_name: ypjzcgndtkhvjnrxnprz
      telephone: crbdyrljswclnryyke
      current_password: gyzdqelftxbydmfnhkhprrctk
      password: '"h20qf"CM]m'
      password_confirmation: qwotjluf
    fileParameters:
      signature: null
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer ad6VvkeP6gc5afE8Z1h4D3b'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/users/users/reset-password
    metadata:
      groupName: 'Gestion des utilisateurs'
      groupDescription: |-

        APIs pour la gestion des utilisateurs
      subgroup: ''
      subgroupDescription: ''
      title: "Réinitialiser le mot de passe d'un utilisateur par lui-même"
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 4cDhP38VdZ165avkEf6gbae'
    controller: null
    method: null
    route: null
    custom: []
