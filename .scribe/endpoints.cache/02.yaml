## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Gestion des utilisateurs'
description: |-

  APIs pour la gestion des utilisateurs
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/users
    metadata:
      groupName: 'Gestion des utilisateurs'
      groupDescription: |-

        APIs pour la gestion des utilisateurs
      subgroup: ''
      subgroupDescription: ''
      title: 'Lister les utilisateurs'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6PE3gab51VedfkaD8cZh6v4'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/users/{id}'
    metadata:
      groupName: 'Gestion des utilisateurs'
      groupDescription: |-

        APIs pour la gestion des utilisateurs
      subgroup: ''
      subgroupDescription: ''
      title: 'Afficher un utilisateur'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: eveniet
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: eveniet
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer dhD3VZ4v1ka6af6ecEb8gP5'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/users
    metadata:
      groupName: 'Gestion des utilisateurs'
      groupDescription: |-

        APIs pour la gestion des utilisateurs
      subgroup: ''
      subgroupDescription: ''
      title: 'Créer un nouvel utilisateur'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      code:
        name: code
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: true
        example: qyehpccdpajfbqziumi
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      email:
        name: email
        description: 'Must match the regex /^[a-zA-Z0-9._%+\-]+@[a-zA-Z0-9.\-]+\.[a-zA-Z]{2,}$/. Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: true
        example: mariam.wisozk@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      first_name:
        name: first_name
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: true
        example: gkyxanqd
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      last_name:
        name: last_name
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: true
        example: mesqljvsgyjjnefepfnavre
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      telephone:
        name: telephone
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: false
        example: iqebiapdcsd
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      entity_id:
        name: entity_id
        description: 'The <code>id</code> of an existing record in the entities table.'
        required: true
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      role:
        name: role
        description: 'The <code>name</code> of an existing record in the roles table.'
        required: true
        example: vel
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password:
        name: password
        description: 'Le texte de value ne peut pas contenir plus de 100 caractères.'
        required: false
        example: '?.GM=K6F\A!?\Z,j'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      code: qyehpccdpajfbqziumi
      email: mariam.wisozk@example.net
      first_name: gkyxanqd
      last_name: mesqljvsgyjjnefepfnavre
      telephone: iqebiapdcsd
      entity_id: et
      role: vel
      password: '?.GM=K6F\A!?\Z,j'
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer ebPag46aVZ13hdEDv8c6f5k'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/users/{id}'
    metadata:
      groupName: 'Gestion des utilisateurs'
      groupDescription: |-

        APIs pour la gestion des utilisateurs
      subgroup: ''
      subgroupDescription: ''
      title: "Mettre à jour un utilisateur les informations de l'utilisateur"
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: officiis
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: officiis
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      code:
        name: code
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: true
        example: raotby
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      first_name:
        name: first_name
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: true
        example: skhjucpjlej
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      last_name:
        name: last_name
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: true
        example: ssycqdbmbbvalyrm
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      email:
        name: email
        description: 'Must match the regex /^[a-zA-Z0-9._%+\-]+@[a-zA-Z0-9.\-]+\.[a-zA-Z]{2,}$/. Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: true
        example: hswift@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      telephone:
        name: telephone
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: false
        example: zkn
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      role:
        name: role
        description: 'The <code>name</code> of an existing record in the roles table.'
        required: true
        example: veniam
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      signature:
        name: signature
        description: 'Le champ value doit être une image. La taille du fichier de value ne peut pas dépasser 2048 kilo-octets.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      current_password:
        name: current_password
        description: 'Le texte de value ne peut pas contenir plus de 100 caractères.'
        required: false
        example: kxpi
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      password:
        name: password
        description: 'Le texte de value ne peut pas contenir plus de 100 caractères.'
        required: false
        example: 4RF!$m
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      password_confirmation:
        name: password_confirmation
        description: 'Le texte de value ne peut pas contenir plus de 100 caractères.'
        required: false
        example: pouqmhrxa
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      code: raotby
      first_name: skhjucpjlej
      last_name: ssycqdbmbbvalyrm
      email: hswift@example.net
      telephone: zkn
      role: veniam
      current_password: kxpi
      password: 4RF!$m
      password_confirmation: pouqmhrxa
    fileParameters:
      signature: null
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Z6cvfEa6h18dabg435DVkeP'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/users/{id}/enable'
    metadata:
      groupName: 'Gestion des utilisateurs'
      groupDescription: |-

        APIs pour la gestion des utilisateurs
      subgroup: ''
      subgroupDescription: ''
      title: 'Activer un utilisateur'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: cum
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: cum
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 5gaP3DkV6dh6vE41acZb8ef'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/users/{id}/disable'
    metadata:
      groupName: 'Gestion des utilisateurs'
      groupDescription: |-

        APIs pour la gestion des utilisateurs
      subgroup: ''
      subgroupDescription: ''
      title: 'Désactiver un utilisateur'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: alias
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: alias
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 4Dd6e1avZ3g5VE6Pk8hbafc'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/users/{id}/reset'
    metadata:
      groupName: 'Gestion des utilisateurs'
      groupDescription: |-

        APIs pour la gestion des utilisateurs
      subgroup: ''
      subgroupDescription: ''
      title: "Réinitialiser le mot de passe d'un utilisateur par un administrateur"
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: unde
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: unde
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 63eafh8ag6Z1bdcvk5D4VEP'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/users/update/profile
    metadata:
      groupName: 'Gestion des utilisateurs'
      groupDescription: |-

        APIs pour la gestion des utilisateurs
      subgroup: ''
      subgroupDescription: ''
      title: "Mettre à jour les informations de l'utilisateur de profil de l'utilisateur connecté"
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      code:
        name: code
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: true
        example: pkjymjqwpzyfnnucdmzwf
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      first_name:
        name: first_name
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: true
        example: rfradfsvybaxcbbtfgbnu
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      last_name:
        name: last_name
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: true
        example: banaf
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      email:
        name: email
        description: 'Must match the regex /^[a-zA-Z0-9._%+\-]+@[a-zA-Z0-9.\-]+\.[a-zA-Z]{2,}$/. Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: true
        example: elinore.collier@example.org
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      telephone:
        name: telephone
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: false
        example: zxblnxryhebydlpxeomksqvo
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      role:
        name: role
        description: 'The <code>name</code> of an existing record in the roles table.'
        required: true
        example: perspiciatis
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      signature:
        name: signature
        description: 'Le champ value doit être une image. La taille du fichier de value ne peut pas dépasser 2048 kilo-octets.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      current_password:
        name: current_password
        description: 'Le texte de value ne peut pas contenir plus de 100 caractères.'
        required: false
        example: axmkpscaummygworofvvdjvfn
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      password:
        name: password
        description: 'Le texte de value ne peut pas contenir plus de 100 caractères.'
        required: false
        example: 'dcu~V"x'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      password_confirmation:
        name: password_confirmation
        description: 'Le texte de value ne peut pas contenir plus de 100 caractères.'
        required: false
        example: fmmbshuncdy
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      code: pkjymjqwpzyfnnucdmzwf
      first_name: rfradfsvybaxcbbtfgbnu
      last_name: banaf
      email: elinore.collier@example.org
      telephone: zxblnxryhebydlpxeomksqvo
      role: perspiciatis
      current_password: axmkpscaummygworofvvdjvfn
      password: 'dcu~V"x'
      password_confirmation: fmmbshuncdy
    fileParameters:
      signature: null
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer bV8E1Dha3Zc6fev6d5agPk4'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/users/{id}/reset-user-password'
    metadata:
      groupName: 'Gestion des utilisateurs'
      groupDescription: |-

        APIs pour la gestion des utilisateurs
      subgroup: ''
      subgroupDescription: ''
      title: "Modifier les informations d'un utilisateur connecté par lui-même"
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: quia
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: quia
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Le champ value doit être une adresse e-mail valide. Must match the regex /^[a-zA-Z0-9._%+\-]+@[a-zA-Z0-9.\-]+\.[a-zA-Z]{2,}$/. Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: true
        example: ward.scot@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      first_name:
        name: first_name
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: true
        example: lcbp
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      last_name:
        name: last_name
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: true
        example: aalgjzmfqwhfgpwuccit
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      telephone:
        name: telephone
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: false
        example: cupwiegsqh
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      signature:
        name: signature
        description: 'Le champ value doit être une image. La taille du fichier de value ne peut pas dépasser 2048 kilo-octets.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      current_password:
        name: current_password
        description: 'Le texte de value ne peut pas contenir plus de 100 caractères.'
        required: false
        example: cxiklarzafmv
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      password:
        name: password
        description: 'Le texte de value ne peut pas contenir plus de 100 caractères.'
        required: false
        example: 'KswNQTth_O3f&'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      password_confirmation:
        name: password_confirmation
        description: 'Le texte de value ne peut pas contenir plus de 100 caractères.'
        required: false
        example: bktzubnpnbq
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      email: ward.scot@example.com
      first_name: lcbp
      last_name: aalgjzmfqwhfgpwuccit
      telephone: cupwiegsqh
      current_password: cxiklarzafmv
      password: 'KswNQTth_O3f&'
      password_confirmation: bktzubnpnbq
    fileParameters:
      signature: null
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer de6Ef8P36bZac4Dv5gh1akV'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/users/users/reset-password
    metadata:
      groupName: 'Gestion des utilisateurs'
      groupDescription: |-

        APIs pour la gestion des utilisateurs
      subgroup: ''
      subgroupDescription: ''
      title: "Réinitialiser le mot de passe d'un utilisateur par lui-même"
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer V5h8abvgc46Z316keDfPEda'
    controller: null
    method: null
    route: null
    custom: []
