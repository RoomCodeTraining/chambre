## Autogenerated by Scribe. DO NOT MODIFY.

name: "Gestion des types d'expertise"
description: |-

  APIs pour la gestion des types d'expertise
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/expertise-types
    metadata:
      groupName: "Gestion des types d'expertise"
      groupDescription: |-

        APIs pour la gestion des types d'expertise
      subgroup: ''
      subgroupDescription: ''
      title: "Lister tous les types d'expertise"
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer D4eEabP68v6dVgZ3hf15kac'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/expertise-types
    metadata:
      groupName: "Gestion des types d'expertise"
      groupDescription: |-

        APIs pour la gestion des types d'expertise
      subgroup: ''
      subgroupDescription: ''
      title: "Ajouter un type d'expertise"
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      label:
        name: label
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: true
        example: tzlearivwxqdqyq
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: ''
        required: false
        example: 'Vel sed error et veniam ipsam error porro.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      label: tzlearivwxqdqyq
      description: 'Vel sed error et veniam ipsam error porro.'
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer E1df35eDcabgkZ64h6VPva8'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/expertise-types/{expertise_type}'
    metadata:
      groupName: "Gestion des types d'expertise"
      groupDescription: |-

        APIs pour la gestion des types d'expertise
      subgroup: ''
      subgroupDescription: ''
      title: "Afficher un type d'expertise"
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      expertise_type:
        name: expertise_type
        description: ''
        required: true
        example: tempore
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      expertise_type: tempore
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer akVd5v6aZ1h6bc8g3PEeD4f'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/expertise-types/{expertise_type}'
    metadata:
      groupName: "Gestion des types d'expertise"
      groupDescription: |-

        APIs pour la gestion des types d'expertise
      subgroup: ''
      subgroupDescription: ''
      title: "Mettre à jour un type d'expertise"
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      expertise_type:
        name: expertise_type
        description: ''
        required: true
        example: qui
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      expertise_type: qui
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      label:
        name: label
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: true
        example: h
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: ''
        required: false
        example: 'Natus odio eos quia in saepe voluptatem.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      label: h
      description: 'Natus odio eos quia in saepe voluptatem.'
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer fVe546Ddk6Pbhg1a3EcZav8'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/expertise-types/{expertise_type}'
    metadata:
      groupName: "Gestion des types d'expertise"
      groupDescription: |-

        APIs pour la gestion des types d'expertise
      subgroup: ''
      subgroupDescription: ''
      title: "Supprimer un type d'expertise"
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      expertise_type:
        name: expertise_type
        description: ''
        required: true
        example: dolores
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      expertise_type: dolores
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer dh4gZeP6kv8cfaaDEb613V5'
    controller: null
    method: null
    route: null
    custom: []
