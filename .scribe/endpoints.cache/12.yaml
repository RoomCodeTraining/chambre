## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Gestion des marques de véhicules'
description: |-

  APIs pour la gestion des marques de véhicules
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/brands
    metadata:
      groupName: 'Gestion des marques de véhicules'
      groupDescription: |-

        APIs pour la gestion des marques de véhicules
      subgroup: ''
      subgroupDescription: ''
      title: 'Lister toutes les marques'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer a43ZcDgVE661abPkdeh58vf'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/brands
    metadata:
      groupName: 'Gestion des marques de véhicules'
      groupDescription: |-

        APIs pour la gestion des marques de véhicules
      subgroup: ''
      subgroupDescription: ''
      title: 'Ajouter une marque'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      label:
        name: label
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: true
        example: lplkqeawsrkkghkygjey
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: ''
        required: false
        example: 'Voluptatibus rerum voluptatem omnis culpa adipisci.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      label: lplkqeawsrkkghkygjey
      description: 'Voluptatibus rerum voluptatem omnis culpa adipisci.'
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Z4deVbg15EhDaak3fcP8v66'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/brands/{id}'
    metadata:
      groupName: 'Gestion des marques de véhicules'
      groupDescription: |-

        APIs pour la gestion des marques de véhicules
      subgroup: ''
      subgroupDescription: ''
      title: 'Afficher une marque'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the brand.'
        required: true
        example: repudiandae
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: repudiandae
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer kDavZhgdE8656cbPVfe3a14'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/brands/{id}'
    metadata:
      groupName: 'Gestion des marques de véhicules'
      groupDescription: |-

        APIs pour la gestion des marques de véhicules
      subgroup: ''
      subgroupDescription: ''
      title: 'Mettre à jour une marque'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the brand.'
        required: true
        example: itaque
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: itaque
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      label:
        name: label
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: true
        example: egqd
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: ''
        required: false
        example: 'Nobis eum sit in modi quibusdam qui nisi.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      label: egqd
      description: 'Nobis eum sit in modi quibusdam qui nisi.'
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer ac65gebZ4vha8E3PVkDd61f'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/brands/{id}'
    metadata:
      groupName: 'Gestion des marques de véhicules'
      groupDescription: |-

        APIs pour la gestion des marques de véhicules
      subgroup: ''
      subgroupDescription: ''
      title: 'Supprimer une marque'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the brand.'
        required: true
        example: eius
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: eius
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer eDgE1fPc5d6vkaa684bhZ3V'
    controller: null
    method: null
    route: null
    custom: []
