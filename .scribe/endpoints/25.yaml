name: 'Gestion des clients'
description: |-

  APIs pour la gestion des clients
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/clients
    metadata:
      groupName: 'Gestion des clients'
      groupDescription: |-

        APIs pour la gestion des clients
      subgroup: ''
      subgroupDescription: ''
      title: 'Lister tous les clients'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer db35PZ6ga1Davcf6E8hVk4e'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/clients
    metadata:
      groupName: 'Gestion des clients'
      groupDescription: |-

        APIs pour la gestion des clients
      subgroup: ''
      subgroupDescription: ''
      title: 'Ajouter un client'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: true
        example: bjwcqncbcupdurjrzuaueohr
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      email:
        name: email
        description: 'Must match the regex /^[a-zA-Z0-9._%+\-]+@[a-zA-Z0-9.\-]+\.[a-zA-Z]{2,}$/.'
        required: false
        example: 'P@Z.D{2,}'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      phone_1:
        name: phone_1
        description: 'Le texte de value ne peut pas contenir plus de 20 caractères.'
        required: false
        example: euz
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      phone_2:
        name: phone_2
        description: 'Le texte de value ne peut pas contenir plus de 20 caractères.'
        required: false
        example: mhkd
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      address:
        name: address
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: false
        example: raptymxshoycjlqhoahxhllh
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      name: bjwcqncbcupdurjrzuaueohr
      email: 'P@Z.D{2,}'
      phone_1: euz
      phone_2: mhkd
      address: raptymxshoycjlqhoahxhllh
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer kD4Evh365aZaVcgd6Pbe8f1'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/clients/{id}'
    metadata:
      groupName: 'Gestion des clients'
      groupDescription: |-

        APIs pour la gestion des clients
      subgroup: ''
      subgroupDescription: ''
      title: 'Afficher un client'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the client.'
        required: true
        example: nesciunt
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: nesciunt
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6cfZk85ebEaD36hg4VvaP1d'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/clients/{id}'
    metadata:
      groupName: 'Gestion des clients'
      groupDescription: |-

        APIs pour la gestion des clients
      subgroup: ''
      subgroupDescription: ''
      title: 'Mettre à jour un client'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the client.'
        required: true
        example: atque
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: atque
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: true
        example: ogy
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      email:
        name: email
        description: 'Must match the regex /^[a-zA-Z0-9._%+\-]+@[a-zA-Z0-9.\-]+\.[a-zA-Z]{2,}$/. Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: false
        example: judah.reichel@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      phone_1:
        name: phone_1
        description: 'Le texte de value ne peut pas contenir plus de 20 caractères.'
        required: false
        example: uaym
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      phone_2:
        name: phone_2
        description: 'Le texte de value ne peut pas contenir plus de 20 caractères.'
        required: false
        example: rzaptptdxtdbujva
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      address:
        name: address
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: false
        example: txdizdgdc
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      name: ogy
      email: judah.reichel@example.com
      phone_1: uaym
      phone_2: rzaptptdxtdbujva
      address: txdizdgdc
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer k6bdacE6vhD34ZePVg1a5f8'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/clients/{id}'
    metadata:
      groupName: 'Gestion des clients'
      groupDescription: |-

        APIs pour la gestion des clients
      subgroup: ''
      subgroupDescription: ''
      title: 'Supprimer un client'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the client.'
        required: true
        example: nam
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: nam
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer f3V5b81gE4kvehaDd6ZPac6'
    controller: null
    method: null
    route: null
    custom: []
