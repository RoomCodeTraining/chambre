name: 'Gestion des chèques'
description: |-

  APIs pour la gestion des chèques
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/checks
    metadata:
      groupName: 'Gestion des chèques'
      groupDescription: |-

        APIs pour la gestion des chèques
      subgroup: ''
      subgroupDescription: ''
      title: 'Lister tous les chèques'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer bv3d64aeVfg1a8Zc6hD5kEP'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/checks
    metadata:
      groupName: 'Gestion des chèques'
      groupDescription: |-

        APIs pour la gestion des chèques
      subgroup: ''
      subgroupDescription: ''
      title: 'Créer un chèque'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      payment_id:
        name: payment_id
        description: 'The <code>id</code> of an existing record in the payments table.'
        required: true
        example: eum
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      bank_id:
        name: bank_id
        description: 'The <code>id</code> of an existing record in the banks table.'
        required: true
        example: aut
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      date:
        name: date
        description: 'Must be a valid date in the format <code>Y-m-d</code>.'
        required: true
        example: '2025-10-14'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      amount:
        name: amount
        description: ''
        required: true
        example: 304.1294
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      photo:
        name: photo
        description: 'Must be a file. La taille du fichier de value ne peut pas dépasser 2048 kilo-octets.'
        required: true
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      payment_id: eum
      bank_id: aut
      date: '2025-10-14'
      amount: 304.1294
    fileParameters:
      photo: null
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer d4vhV5ak361E6PcfeZg8baD'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/checks/{id}'
    metadata:
      groupName: 'Gestion des chèques'
      groupDescription: |-

        APIs pour la gestion des chèques
      subgroup: ''
      subgroupDescription: ''
      title: 'Afficher un chèque'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the check.'
        required: true
        example: 20
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 20
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer aakE416vfPgh3edZ6cD8b5V'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/checks/{id}'
    metadata:
      groupName: 'Gestion des chèques'
      groupDescription: |-

        APIs pour la gestion des chèques
      subgroup: ''
      subgroupDescription: ''
      title: 'Mettre à jour un chèque'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the check.'
        required: true
        example: 19
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 19
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      payment_id:
        name: payment_id
        description: 'The <code>id</code> of an existing record in the payments table.'
        required: true
        example: est
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      bank_id:
        name: bank_id
        description: 'The <code>id</code> of an existing record in the banks table.'
        required: true
        example: commodi
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      date:
        name: date
        description: 'Must be a valid date in the format <code>Y-m-d</code>.'
        required: true
        example: '2025-10-14'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      amount:
        name: amount
        description: ''
        required: true
        example: 1584237.8
        type: number
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      photo:
        name: photo
        description: 'Must be a file. La taille du fichier de value ne peut pas dépasser 2048 kilo-octets.'
        required: true
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      payment_id: est
      bank_id: commodi
      date: '2025-10-14'
      amount: 1584237.8
    fileParameters:
      photo: null
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer aZda8cPDVekbE46gf5hv136'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/checks/{id}'
    metadata:
      groupName: 'Gestion des chèques'
      groupDescription: |-

        APIs pour la gestion des chèques
      subgroup: ''
      subgroupDescription: ''
      title: 'Supprimer un chèque'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the check.'
        required: true
        example: 12
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 12
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Zg1bc8e6Vv6ka4f35hEaPDd'
    controller: null
    method: null
    route: null
    custom: []
