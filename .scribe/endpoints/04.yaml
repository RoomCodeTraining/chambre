name: 'Gestion des entités'
description: |-

  APIs pour la gestion des entités
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/entities
    metadata:
      groupName: 'Gestion des entités'
      groupDescription: |-

        APIs pour la gestion des entités
      subgroup: ''
      subgroupDescription: ''
      title: 'Lister les entités'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer h85Ve13v6a64DgZkbdcfaPE'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/entities/{id}'
    metadata:
      groupName: 'Gestion des entités'
      groupDescription: |-

        APIs pour la gestion des entités
      subgroup: ''
      subgroupDescription: ''
      title: 'Afficher une entité'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the entity.'
        required: true
        example: dolor
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: dolor
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 1afvaeEd3k8cgDZP6564hVb'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/entities/{id}'
    metadata:
      groupName: 'Gestion des entités'
      groupDescription: |-

        APIs pour la gestion des entités
      subgroup: ''
      subgroupDescription: ''
      title: 'Mettre à jour une entité'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the entity.'
        required: true
        example: eius
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: eius
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: true
        example: whernbjkcx
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      prefix:
        name: prefix
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: false
        example: hxaavgxyocjmubgdagasow
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      suffix:
        name: suffix
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: false
        example: f
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      address:
        name: address
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: false
        example: dthgjbrjvnpmtkimrdwdbwlx
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      email:
        name: email
        description: 'Must match the regex /^[a-zA-Z0-9._%+\-]+@[a-zA-Z0-9.\-]+\.[a-zA-Z]{2,}$/. Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: false
        example: esperanza29@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      telephone:
        name: telephone
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: false
        example: tsbjcus
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      service_description:
        name: service_description
        description: ''
        required: false
        example: totam
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      footer_description:
        name: footer_description
        description: ''
        required: false
        example: iure
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      name: whernbjkcx
      prefix: hxaavgxyocjmubgdagasow
      suffix: f
      address: dthgjbrjvnpmtkimrdwdbwlx
      email: esperanza29@example.net
      telephone: tsbjcus
      service_description: totam
      footer_description: iure
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer aag6E8edfV4Z3bPvkhc61D5'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/entities/{id}/enable'
    metadata:
      groupName: 'Gestion des entités'
      groupDescription: |-

        APIs pour la gestion des entités
      subgroup: ''
      subgroupDescription: ''
      title: 'Activer une entité'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the entity.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer EPvg6fe5V14DcbkZahad638'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/entities/{id}/disable'
    metadata:
      groupName: 'Gestion des entités'
      groupDescription: |-

        APIs pour la gestion des entités
      subgroup: ''
      subgroupDescription: ''
      title: 'Désactiver une entité'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the entity.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer v6caV463Df5dhaZ1PE8gkbe'
    controller: null
    method: null
    route: null
    custom: []
