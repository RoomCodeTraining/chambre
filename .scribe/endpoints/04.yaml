name: 'Gestion des entités'
description: |-

  APIs pour la gestion des entités
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/entities
    metadata:
      groupName: 'Gestion des entités'
      groupDescription: |-

        APIs pour la gestion des entités
      subgroup: ''
      subgroupDescription: ''
      title: 'Lister les entités'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 4f61dZa3a6gcVv5PkE8hDbe'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/entities/{id}'
    metadata:
      groupName: 'Gestion des entités'
      groupDescription: |-

        APIs pour la gestion des entités
      subgroup: ''
      subgroupDescription: ''
      title: 'Afficher une entité'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the entity.'
        required: true
        example: vitae
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: vitae
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer b6vfZ8hE3gaDk56a4edP1Vc'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/entities
    metadata:
      groupName: 'Gestion des entités'
      groupDescription: |-

        APIs pour la gestion des entités
      subgroup: ''
      subgroupDescription: ''
      title: 'Ajouter une entité'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      code:
        name: code
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: false
        example: gvzairtrwaxzqq
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      name:
        name: name
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: true
        example: tdolqwbbtxojcdaorcrk
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      address:
        name: address
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: false
        example: jhz
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      email:
        name: email
        description: 'Le champ value doit être une adresse e-mail valide. Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: false
        example: chase.robel@example.org
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      telephone:
        name: telephone
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: false
        example: bxtgignrktlxhutirtu
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      entity_type_code:
        name: entity_type_code
        description: 'The <code>code</code> of an existing record in the entity_types table.'
        required: true
        example: quod
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanBodyParameters:
      code: gvzairtrwaxzqq
      name: tdolqwbbtxojcdaorcrk
      address: jhz
      email: chase.robel@example.org
      telephone: bxtgignrktlxhutirtu
      entity_type_code: quod
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer ae4Z86DdgfPv5k36Eca1bhV'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/entities/{id}'
    metadata:
      groupName: 'Gestion des entités'
      groupDescription: |-

        APIs pour la gestion des entités
      subgroup: ''
      subgroupDescription: ''
      title: 'Mettre à jour une entité'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the entity.'
        required: true
        example: ipsam
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: ipsam
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: true
        example: ypuujdhcbssxoyagrj
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      address:
        name: address
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: false
        example: hmwqzmcfx
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      email:
        name: email
        description: 'Le champ value doit être une adresse e-mail valide. Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: false
        example: zaria88@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      telephone:
        name: telephone
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: false
        example: jq
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      name: ypuujdhcbssxoyagrj
      address: hmwqzmcfx
      email: zaria88@example.net
      telephone: jq
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3E6k1VZae4dgfa86Phv5bDc'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/entities/{id}/enable'
    metadata:
      groupName: 'Gestion des entités'
      groupDescription: |-

        APIs pour la gestion des entités
      subgroup: ''
      subgroupDescription: ''
      title: 'Activer une entité'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the entity.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer ab15efk8hc6PEgDvZaVd346'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/entities/{id}/disable'
    metadata:
      groupName: 'Gestion des entités'
      groupDescription: |-

        APIs pour la gestion des entités
      subgroup: ''
      subgroupDescription: ''
      title: 'Désactiver une entité'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the entity.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 68Pg6c4eVafDEd5kvh13Zab'
    controller: null
    method: null
    route: null
    custom: []
