name: 'Gestion des entités'
description: |-

  APIs pour la gestion des entités
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/entities
    metadata:
      groupName: 'Gestion des entités'
      groupDescription: |-

        APIs pour la gestion des entités
      subgroup: ''
      subgroupDescription: ''
      title: 'Lister les entités'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer cZg1686va3h4kb5faPEDdVe'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/entities/{id}'
    metadata:
      groupName: 'Gestion des entités'
      groupDescription: |-

        APIs pour la gestion des entités
      subgroup: ''
      subgroupDescription: ''
      title: 'Afficher une entité'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the entity.'
        required: true
        example: totam
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: totam
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer aPv4e6Ec1V53ga86hZfDbdk'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/entities/{id}'
    metadata:
      groupName: 'Gestion des entités'
      groupDescription: |-

        APIs pour la gestion des entités
      subgroup: ''
      subgroupDescription: ''
      title: 'Mettre à jour une entité'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the entity.'
        required: true
        example: voluptatem
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: voluptatem
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: true
        example: dyn
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      prefix:
        name: prefix
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: false
        example: wtgjqurymy
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      suffix:
        name: suffix
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: false
        example: wifaclhjqktwbjahpk
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      address:
        name: address
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: false
        example: fwwglutzqmesyjaoodivk
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      email:
        name: email
        description: 'Must match the regex /^[a-zA-Z0-9._%+\-]+@[a-zA-Z0-9.\-]+\.[a-zA-Z]{2,}$/. Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: false
        example: sydnie51@example.org
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      telephone:
        name: telephone
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: false
        example: gwqxmpteotoy
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      service_description:
        name: service_description
        description: ''
        required: false
        example: dolor
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      footer_description:
        name: footer_description
        description: ''
        required: false
        example: ipsam
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      name: dyn
      prefix: wtgjqurymy
      suffix: wifaclhjqktwbjahpk
      address: fwwglutzqmesyjaoodivk
      email: sydnie51@example.org
      telephone: gwqxmpteotoy
      service_description: dolor
      footer_description: ipsam
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Z6eE8k6fD4ah351dcaVvgbP'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/entities/{id}/enable'
    metadata:
      groupName: 'Gestion des entités'
      groupDescription: |-

        APIs pour la gestion des entités
      subgroup: ''
      subgroupDescription: ''
      title: 'Activer une entité'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the entity.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Vc5EabdahDfv468ZP61keg3'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/entities/{id}/disable'
    metadata:
      groupName: 'Gestion des entités'
      groupDescription: |-

        APIs pour la gestion des entités
      subgroup: ''
      subgroupDescription: ''
      title: 'Désactiver une entité'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the entity.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer f3b4vk6he5aVDZ8Pd6cag1E'
    controller: null
    method: null
    route: null
    custom: []
