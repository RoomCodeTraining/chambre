name: 'Gestion des clients'
description: |-

  APIs pour la gestion des clients
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/clients
    metadata:
      groupName: 'Gestion des clients'
      groupDescription: |-

        APIs pour la gestion des clients
      subgroup: ''
      subgroupDescription: ''
      title: 'Lister tous les clients'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer vEdV3a56hekb4DZ8ag1cPf6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/clients
    metadata:
      groupName: 'Gestion des clients'
      groupDescription: |-

        APIs pour la gestion des clients
      subgroup: ''
      subgroupDescription: ''
      title: 'Ajouter un client'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: true
        example: itpgdpyvaftgwcxngkozkawg
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      email:
        name: email
        description: 'Must match the regex /^[a-zA-Z0-9._%+\-]+@[a-zA-Z0-9.\-]+\.[a-zA-Z]{2,}$/.'
        required: false
        example: 'vT@pH.r{2,}'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      phone_1:
        name: phone_1
        description: 'Le texte de value ne peut pas contenir plus de 20 caractères.'
        required: false
        example: nyibcoiyfrm
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      phone_2:
        name: phone_2
        description: 'Le texte de value ne peut pas contenir plus de 20 caractères.'
        required: false
        example: uy
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      address:
        name: address
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: false
        example: hxmutekmmgqltb
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      name: itpgdpyvaftgwcxngkozkawg
      email: 'vT@pH.r{2,}'
      phone_1: nyibcoiyfrm
      phone_2: uy
      address: hxmutekmmgqltb
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer hda86EekcvDfVg5ZP6143ab'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/clients/{id}'
    metadata:
      groupName: 'Gestion des clients'
      groupDescription: |-

        APIs pour la gestion des clients
      subgroup: ''
      subgroupDescription: ''
      title: 'Afficher un client'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the client.'
        required: true
        example: labore
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: labore
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer hbZf613c5D4vVEkag8aPe6d'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/clients/{id}'
    metadata:
      groupName: 'Gestion des clients'
      groupDescription: |-

        APIs pour la gestion des clients
      subgroup: ''
      subgroupDescription: ''
      title: 'Mettre à jour un client'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the client.'
        required: true
        example: animi
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: animi
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: true
        example: amvhjgfwtoqbasjkr
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      email:
        name: email
        description: 'Must match the regex /^[a-zA-Z0-9._%+\-]+@[a-zA-Z0-9.\-]+\.[a-zA-Z]{2,}$/. Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: false
        example: wcrooks@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      phone_1:
        name: phone_1
        description: 'Le texte de value ne peut pas contenir plus de 20 caractères.'
        required: false
        example: gzetjnxazzinem
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      phone_2:
        name: phone_2
        description: 'Le texte de value ne peut pas contenir plus de 20 caractères.'
        required: false
        example: ikjrepfkifkkenyfdsv
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      address:
        name: address
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: false
        example: t
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      name: amvhjgfwtoqbasjkr
      email: wcrooks@example.net
      phone_1: gzetjnxazzinem
      phone_2: ikjrepfkifkkenyfdsv
      address: t
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3VaDf5Zdbk8EP61gvchae64'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/clients/{id}'
    metadata:
      groupName: 'Gestion des clients'
      groupDescription: |-

        APIs pour la gestion des clients
      subgroup: ''
      subgroupDescription: ''
      title: 'Supprimer un client'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the client.'
        required: true
        example: molestias
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: molestias
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer EZ5Va4kdbfe6a6c18vPD3gh'
    controller: null
    method: null
    route: null
    custom: []
