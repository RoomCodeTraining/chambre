name: 'Gestion des remarques'
description: |-

  APIs pour la gestion des remarques
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/remarks
    metadata:
      groupName: 'Gestion des remarques'
      groupDescription: |-

        APIs pour la gestion des remarques
      subgroup: ''
      subgroupDescription: ''
      title: 'Lister tous les remarques'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 1ac5D4PdV3Eh6vkZafeg8b6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/remarks
    metadata:
      groupName: 'Gestion des remarques'
      groupDescription: |-

        APIs pour la gestion des remarques
      subgroup: ''
      subgroupDescription: ''
      title: 'Créer une remarque'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      label:
        name: label
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: true
        example: lamafzebypucw
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: ''
        required: false
        example: 'Nostrum harum similique aut reiciendis esse.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      label: lamafzebypucw
      description: 'Nostrum harum similique aut reiciendis esse.'
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 3486cEgab5dheV6vDfPk1Za'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/remarks/{id}'
    metadata:
      groupName: 'Gestion des remarques'
      groupDescription: |-

        APIs pour la gestion des remarques
      subgroup: ''
      subgroupDescription: ''
      title: 'Afficher une remarque'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the remark.'
        required: true
        example: tempore
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: tempore
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer g1Vk8aaDde3bfE5P64hvZ6c'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/remarks/{id}'
    metadata:
      groupName: 'Gestion des remarques'
      groupDescription: |-

        APIs pour la gestion des remarques
      subgroup: ''
      subgroupDescription: ''
      title: 'Mettre à jour une remarque'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the remark.'
        required: true
        example: dolores
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: dolores
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      label:
        name: label
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: true
        example: ufkbclmufzvd
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: ''
        required: false
        example: 'Et quia dignissimos nulla ullam.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      label: ufkbclmufzvd
      description: 'Et quia dignissimos nulla ullam.'
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer VD3abahfg654kdeEZ61cPv8'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/remarks/{id}'
    metadata:
      groupName: 'Gestion des remarques'
      groupDescription: |-

        APIs pour la gestion des remarques
      subgroup: ''
      subgroupDescription: ''
      title: 'Supprimer une remarque'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the remark.'
        required: true
        example: deserunt
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: deserunt
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer D6fk5dEPhV8Zvceb14a6ag3'
    controller: null
    method: null
    route: null
    custom: []
