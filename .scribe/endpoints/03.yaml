name: "Gestion des types d'entité"
description: |-

  APIs pour la gestion des types d'entité
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/entity-types
    metadata:
      groupName: "Gestion des types d'entité"
      groupDescription: |-

        APIs pour la gestion des types d'entité
      subgroup: ''
      subgroupDescription: ''
      title: "Lister les types d'entité"
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 583eg416afhvPbDdZ6VakcE'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/entity-types/{id}'
    metadata:
      groupName: "Gestion des types d'entité"
      groupDescription: |-

        APIs pour la gestion des types d'entité
      subgroup: ''
      subgroupDescription: ''
      title: "Afficher un type d'entité"
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the entity type.'
        required: true
        example: aut
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: aut
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 4ebvd6153E6kDaP8cfagZVh'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/entity-types
    metadata:
      groupName: "Gestion des types d'entité"
      groupDescription: |-

        APIs pour la gestion des types d'entité
      subgroup: ''
      subgroupDescription: ''
      title: "Ajouter un type d'entité"
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      label:
        name: label
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: true
        example: iyk
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: ''
        required: false
        example: 'Sed laudantium libero quia.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      label: iyk
      description: 'Sed laudantium libero quia.'
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer vh5VabEZ81P36f46Dcgdeka'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/entity-types/{id}'
    metadata:
      groupName: "Gestion des types d'entité"
      groupDescription: |-

        APIs pour la gestion des types d'entité
      subgroup: ''
      subgroupDescription: ''
      title: "Mettre à jour un type d'entité"
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the entity type.'
        required: true
        example: labore
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: labore
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      label:
        name: label
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: true
        example: ywsewgfrjhkoeahgvmacnnv
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      description:
        name: description
        description: ''
        required: false
        example: 'Ut unde exercitationem error et voluptas.'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      label: ywsewgfrjhkoeahgvmacnnv
      description: 'Ut unde exercitationem error et voluptas.'
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer k6Z1V8Peh4ad3v5bgEDfa6c'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/entity-types/{id}/enable'
    metadata:
      groupName: "Gestion des types d'entité"
      groupDescription: |-

        APIs pour la gestion des types d'entité
      subgroup: ''
      subgroupDescription: ''
      title: "Activer un type d'entité"
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the entity type.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer daE5bh8VaeDv34gkPcZ661f'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/entity-types/{id}/disable'
    metadata:
      groupName: "Gestion des types d'entité"
      groupDescription: |-

        APIs pour la gestion des types d'entité
      subgroup: ''
      subgroupDescription: ''
      title: "Désactiver un type d'entité"
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the entity type.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Vhvb1g83kc5EadDe664ZPfa'
    controller: null
    method: null
    route: null
    custom: []
