name: 'Gestion des utilisateurs'
description: |-

  APIs pour la gestion des utilisateurs
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/users
    metadata:
      groupName: 'Gestion des utilisateurs'
      groupDescription: |-

        APIs pour la gestion des utilisateurs
      subgroup: ''
      subgroupDescription: ''
      title: 'Lister les utilisateurs'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer vd4Zg5a6hfP3E8V6keabD1c'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/users/{id}'
    metadata:
      groupName: 'Gestion des utilisateurs'
      groupDescription: |-

        APIs pour la gestion des utilisateurs
      subgroup: ''
      subgroupDescription: ''
      title: 'Afficher un utilisateur'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer f56aZDdEhbv4k3ag16PcV8e'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/users
    metadata:
      groupName: 'Gestion des utilisateurs'
      groupDescription: |-

        APIs pour la gestion des utilisateurs
      subgroup: ''
      subgroupDescription: ''
      title: 'Créer un nouvel utilisateur'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      code:
        name: code
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: true
        example: cnrrojxrpooobzkqengxnjjeu
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      email:
        name: email
        description: 'Must match the regex /^[a-zA-Z0-9._%+\-]+@[a-zA-Z0-9.\-]+\.[a-zA-Z]{2,}$/. Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: true
        example: myrtice.hyatt@example.org
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      first_name:
        name: first_name
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: true
        example: ukygum
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      last_name:
        name: last_name
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: true
        example: ehzyuutjxlegvvzro
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      telephone:
        name: telephone
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: false
        example: ytsaztvmykj
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      entity_id:
        name: entity_id
        description: 'The <code>id</code> of an existing record in the entities table.'
        required: true
        example: doloremque
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      role:
        name: role
        description: 'The <code>name</code> of an existing record in the roles table.'
        required: true
        example: doloribus
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password:
        name: password
        description: 'Le texte de value ne peut pas contenir plus de 100 caractères.'
        required: false
        example: Gc01Yr+f8
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      code: cnrrojxrpooobzkqengxnjjeu
      email: myrtice.hyatt@example.org
      first_name: ukygum
      last_name: ehzyuutjxlegvvzro
      telephone: ytsaztvmykj
      entity_id: doloremque
      role: doloribus
      password: Gc01Yr+f8
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6dZ1gvVE4DfaPk3a86eb5ch'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/users/{id}'
    metadata:
      groupName: 'Gestion des utilisateurs'
      groupDescription: |-

        APIs pour la gestion des utilisateurs
      subgroup: ''
      subgroupDescription: ''
      title: "Mettre à jour un utilisateur les informations de l'utilisateur"
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      code:
        name: code
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: true
        example: eqjcf
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      first_name:
        name: first_name
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: true
        example: esshalvvd
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      last_name:
        name: last_name
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: true
        example: vvnvh
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      email:
        name: email
        description: 'Must match the regex /^[a-zA-Z0-9._%+\-]+@[a-zA-Z0-9.\-]+\.[a-zA-Z]{2,}$/. Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: true
        example: obrakus@example.org
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      telephone:
        name: telephone
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: false
        example: dfbtndbnu
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      role:
        name: role
        description: 'The <code>name</code> of an existing record in the roles table.'
        required: true
        example: quo
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      signature:
        name: signature
        description: 'Le champ value doit être une image. La taille du fichier de value ne peut pas dépasser 2048 kilo-octets.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      code: eqjcf
      first_name: esshalvvd
      last_name: vvnvh
      email: obrakus@example.org
      telephone: dfbtndbnu
      role: quo
    fileParameters:
      signature: null
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer vV1665hefDagEbc8Za3dkP4'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/users/{id}/enable'
    metadata:
      groupName: 'Gestion des utilisateurs'
      groupDescription: |-

        APIs pour la gestion des utilisateurs
      subgroup: ''
      subgroupDescription: ''
      title: 'Activer un utilisateur'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer vbP85acf1ga46dZhDVEe3k6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/users/{id}/disable'
    metadata:
      groupName: 'Gestion des utilisateurs'
      groupDescription: |-

        APIs pour la gestion des utilisateurs
      subgroup: ''
      subgroupDescription: ''
      title: 'Désactiver un utilisateur'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6Vd4k3vh81DZEPfg5abca6e'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/users/{id}/reset'
    metadata:
      groupName: 'Gestion des utilisateurs'
      groupDescription: |-

        APIs pour la gestion des utilisateurs
      subgroup: ''
      subgroupDescription: ''
      title: "Réinitialiser le mot de passe d'un utilisateur par un administrateur"
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer D316fbc5vadh4ZPk8gVeaE6'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/users/update-profile
    metadata:
      groupName: 'Gestion des utilisateurs'
      groupDescription: |-

        APIs pour la gestion des utilisateurs
      subgroup: ''
      subgroupDescription: ''
      title: "Mettre à jour les informations de l'utilisateur de profil de l'utilisateur connecté"
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      code:
        name: code
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: true
        example: wbwgzwywflnys
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      first_name:
        name: first_name
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: true
        example: qwvqmiemusvgddqw
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      last_name:
        name: last_name
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: true
        example: kldfjghkiezgbgzqjcdba
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      email:
        name: email
        description: 'Must match the regex /^[a-zA-Z0-9._%+\-]+@[a-zA-Z0-9.\-]+\.[a-zA-Z]{2,}$/. Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: true
        example: ignatius.rosenbaum@example.org
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      telephone:
        name: telephone
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: false
        example: hufsvgzptydevylpnhmj
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      role:
        name: role
        description: 'The <code>name</code> of an existing record in the roles table.'
        required: true
        example: eos
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      signature:
        name: signature
        description: 'Le champ value doit être une image. La taille du fichier de value ne peut pas dépasser 2048 kilo-octets.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      code: wbwgzwywflnys
      first_name: qwvqmiemusvgddqw
      last_name: kldfjghkiezgbgzqjcdba
      email: ignatius.rosenbaum@example.org
      telephone: hufsvgzptydevylpnhmj
      role: eos
    fileParameters:
      signature: null
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 645a6EZgD1bekhafVcd8v3P'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/users/reset-password
    metadata:
      groupName: 'Gestion des utilisateurs'
      groupDescription: |-

        APIs pour la gestion des utilisateurs
      subgroup: ''
      subgroupDescription: ''
      title: "Réinitialiser le mot de passe d'un utilisateur par lui-même"
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer vbgahckPZ1d6D4aEe86V3f5'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/users/{id}/reset-user-password'
    metadata:
      groupName: 'Gestion des utilisateurs'
      groupDescription: |-

        APIs pour la gestion des utilisateurs
      subgroup: ''
      subgroupDescription: ''
      title: "Modifier les informations d'un utilisateur connecté par lui-même"
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Le champ value doit être une adresse e-mail valide. Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: true
        example: morissette.cletus@example.org
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      first_name:
        name: first_name
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: true
        example: ifszjocliophceaaptd
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      last_name:
        name: last_name
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: true
        example: k
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      telephone:
        name: telephone
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: false
        example: wprakruciqkagfifpzcw
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      signature:
        name: signature
        description: 'Le champ value doit être une image. La taille du fichier de value ne peut pas dépasser 2048 kilo-octets.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      current_password:
        name: current_password
        description: 'Le texte de value ne peut pas contenir plus de 100 caractères.'
        required: false
        example: xhhlktwes
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      password:
        name: password
        description: 'Le texte de value ne peut pas contenir plus de 100 caractères.'
        required: false
        example: '|54d=?e"Vh7'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      password_confirmation:
        name: password_confirmation
        description: 'Le texte de value ne peut pas contenir plus de 100 caractères.'
        required: false
        example: jpcjtvukaggxxngsfawqrjtmt
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      email: morissette.cletus@example.org
      first_name: ifszjocliophceaaptd
      last_name: k
      telephone: wprakruciqkagfifpzcw
      current_password: xhhlktwes
      password: '|54d=?e"Vh7'
      password_confirmation: jpcjtvukaggxxngsfawqrjtmt
    fileParameters:
      signature: null
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 4aEvcbP6Zf1ahk5Vged36D8'
    controller: null
    method: null
    route: null
    custom: []
