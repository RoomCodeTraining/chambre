name: 'Gestion des utilisateurs'
description: |-

  APIs pour la gestion des utilisateurs
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/users
    metadata:
      groupName: 'Gestion des utilisateurs'
      groupDescription: |-

        APIs pour la gestion des utilisateurs
      subgroup: ''
      subgroupDescription: ''
      title: 'Lister les utilisateurs'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer h13cf5ZDgev4a6baV86PdEk'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/users/{id}'
    metadata:
      groupName: 'Gestion des utilisateurs'
      groupDescription: |-

        APIs pour la gestion des utilisateurs
      subgroup: ''
      subgroupDescription: ''
      title: 'Afficher un utilisateur'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer EeakvbDha4PgVf315cd6Z68'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/users
    metadata:
      groupName: 'Gestion des utilisateurs'
      groupDescription: |-

        APIs pour la gestion des utilisateurs
      subgroup: ''
      subgroupDescription: ''
      title: 'Créer un nouvel utilisateur'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      code:
        name: code
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: true
        example: scdmbjapueiebzstenudhn
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      email:
        name: email
        description: 'Must match the regex /^[a-zA-Z0-9._%+\-]+@[a-zA-Z0-9.\-]+\.[a-zA-Z]{2,}$/. Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: true
        example: meaghan23@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      first_name:
        name: first_name
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: true
        example: vehcmxhwbvqgq
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      last_name:
        name: last_name
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: true
        example: ciaebqbplhlirs
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      telephone:
        name: telephone
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: false
        example: zpsveaay
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      entity_id:
        name: entity_id
        description: 'The <code>id</code> of an existing record in the entities table.'
        required: true
        example: et
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      role:
        name: role
        description: 'The <code>name</code> of an existing record in the roles table.'
        required: true
        example: ex
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password:
        name: password
        description: 'Le texte de value ne peut pas contenir plus de 100 caractères.'
        required: false
        example: 'eqnM!|@V{m7i%B0'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      code: scdmbjapueiebzstenudhn
      email: meaghan23@example.com
      first_name: vehcmxhwbvqgq
      last_name: ciaebqbplhlirs
      telephone: zpsveaay
      entity_id: et
      role: ex
      password: 'eqnM!|@V{m7i%B0'
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer v6gcZh6P4fdEVe831b5aakD'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/users/{id}'
    metadata:
      groupName: 'Gestion des utilisateurs'
      groupDescription: |-

        APIs pour la gestion des utilisateurs
      subgroup: ''
      subgroupDescription: ''
      title: "Mettre à jour un utilisateur les informations de l'utilisateur"
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      code:
        name: code
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: true
        example: whsclrngeubfyjdl
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      first_name:
        name: first_name
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: true
        example: chskxm
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      last_name:
        name: last_name
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: true
        example: hheafbqebmmiwsaqibsvixz
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      email:
        name: email
        description: 'Must match the regex /^[a-zA-Z0-9._%+\-]+@[a-zA-Z0-9.\-]+\.[a-zA-Z]{2,}$/. Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: true
        example: hailee.cartwright@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      telephone:
        name: telephone
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: false
        example: nuyeyvqfflykgwpamnhl
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      role:
        name: role
        description: 'The <code>name</code> of an existing record in the roles table.'
        required: true
        example: veritatis
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      signature:
        name: signature
        description: 'Le champ value doit être une image. La taille du fichier de value ne peut pas dépasser 2048 kilo-octets.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      current_password:
        name: current_password
        description: 'Le texte de value ne peut pas contenir plus de 100 caractères.'
        required: false
        example: bz
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      password:
        name: password
        description: 'Le texte de value ne peut pas contenir plus de 100 caractères.'
        required: false
        example: rVOb=Y;BQ|8
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      password_confirmation:
        name: password_confirmation
        description: 'Le texte de value ne peut pas contenir plus de 100 caractères.'
        required: false
        example: xomtgajuopsxsrjstfcvsa
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      code: whsclrngeubfyjdl
      first_name: chskxm
      last_name: hheafbqebmmiwsaqibsvixz
      email: hailee.cartwright@example.net
      telephone: nuyeyvqfflykgwpamnhl
      role: veritatis
      current_password: bz
      password: rVOb=Y;BQ|8
      password_confirmation: xomtgajuopsxsrjstfcvsa
    fileParameters:
      signature: null
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 45kd1aPZ86eDf3ahg6vcbVE'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/users/{id}/enable'
    metadata:
      groupName: 'Gestion des utilisateurs'
      groupDescription: |-

        APIs pour la gestion des utilisateurs
      subgroup: ''
      subgroupDescription: ''
      title: 'Activer un utilisateur'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer ae86DfcaEv3k1gZ45PbVh6d'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/users/{id}/disable'
    metadata:
      groupName: 'Gestion des utilisateurs'
      groupDescription: |-

        APIs pour la gestion des utilisateurs
      subgroup: ''
      subgroupDescription: ''
      title: 'Désactiver un utilisateur'
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6Z5fg8dPahaEDecVv4k6b13'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/users/{id}/reset'
    metadata:
      groupName: 'Gestion des utilisateurs'
      groupDescription: |-

        APIs pour la gestion des utilisateurs
      subgroup: ''
      subgroupDescription: ''
      title: "Réinitialiser le mot de passe d'un utilisateur par un administrateur"
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer a3gZf8ce6ahb4kP65EDdV1v'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/users/update/profile
    metadata:
      groupName: 'Gestion des utilisateurs'
      groupDescription: |-

        APIs pour la gestion des utilisateurs
      subgroup: ''
      subgroupDescription: ''
      title: "Mettre à jour les informations de l'utilisateur de profil de l'utilisateur connecté"
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      code:
        name: code
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: true
        example: rcgsybvtyookkfhiboxy
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      first_name:
        name: first_name
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: true
        example: prmxyuublszkplpvdu
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      last_name:
        name: last_name
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: true
        example: ikbrlfeowqbnkhzwc
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      email:
        name: email
        description: 'Must match the regex /^[a-zA-Z0-9._%+\-]+@[a-zA-Z0-9.\-]+\.[a-zA-Z]{2,}$/. Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: true
        example: alexa67@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      telephone:
        name: telephone
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: false
        example: thpghajkxjchdkuphg
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      role:
        name: role
        description: 'The <code>name</code> of an existing record in the roles table.'
        required: true
        example: est
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      signature:
        name: signature
        description: 'Le champ value doit être une image. La taille du fichier de value ne peut pas dépasser 2048 kilo-octets.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      current_password:
        name: current_password
        description: 'Le texte de value ne peut pas contenir plus de 100 caractères.'
        required: false
        example: arkxuyivmjqwlsqagcbvqczaj
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      password:
        name: password
        description: 'Le texte de value ne peut pas contenir plus de 100 caractères.'
        required: false
        example: vTWA5\dyY
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      password_confirmation:
        name: password_confirmation
        description: 'Le texte de value ne peut pas contenir plus de 100 caractères.'
        required: false
        example: owwdocwhafqabqoixsqv
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      code: rcgsybvtyookkfhiboxy
      first_name: prmxyuublszkplpvdu
      last_name: ikbrlfeowqbnkhzwc
      email: alexa67@example.net
      telephone: thpghajkxjchdkuphg
      role: est
      current_password: arkxuyivmjqwlsqagcbvqczaj
      password: vTWA5\dyY
      password_confirmation: owwdocwhafqabqoixsqv
    fileParameters:
      signature: null
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 8e6V51Dgaahb4E6ck3PvdZf'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/users/{id}/reset-user-password'
    metadata:
      groupName: 'Gestion des utilisateurs'
      groupDescription: |-

        APIs pour la gestion des utilisateurs
      subgroup: ''
      subgroupDescription: ''
      title: "Modifier les informations d'un utilisateur connecté par lui-même"
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Le champ value doit être une adresse e-mail valide. Must match the regex /^[a-zA-Z0-9._%+\-]+@[a-zA-Z0-9.\-]+\.[a-zA-Z]{2,}$/. Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: true
        example: forest52@example.org
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      first_name:
        name: first_name
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: true
        example: aijpxymkqdhjyeaqamznixumm
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      last_name:
        name: last_name
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: true
        example: ivrpbkwjbmzmzfwlilo
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      telephone:
        name: telephone
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: false
        example: ot
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      signature:
        name: signature
        description: 'Le champ value doit être une image. La taille du fichier de value ne peut pas dépasser 2048 kilo-octets.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      current_password:
        name: current_password
        description: 'Le texte de value ne peut pas contenir plus de 100 caractères.'
        required: false
        example: pdfihs
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      password:
        name: password
        description: 'Le texte de value ne peut pas contenir plus de 100 caractères.'
        required: false
        example: 'opg,(q'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      password_confirmation:
        name: password_confirmation
        description: 'Le texte de value ne peut pas contenir plus de 100 caractères.'
        required: false
        example: ahmihfaitdmzuhsyoxof
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      email: forest52@example.org
      first_name: aijpxymkqdhjyeaqamznixumm
      last_name: ivrpbkwjbmzmzfwlilo
      telephone: ot
      current_password: pdfihs
      password: 'opg,(q'
      password_confirmation: ahmihfaitdmzuhsyoxof
    fileParameters:
      signature: null
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer e16PZ3fvEc5Vb64Ddka8gah'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/users/users/reset-password
    metadata:
      groupName: 'Gestion des utilisateurs'
      groupDescription: |-

        APIs pour la gestion des utilisateurs
      subgroup: ''
      subgroupDescription: ''
      title: "Réinitialiser le mot de passe d'un utilisateur par lui-même"
      description: ''
      authenticated: true
      deprecated: false
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer hgk56Z8e4Edv3abPDcf6a1V'
    controller: null
    method: null
    route: null
    custom: []
