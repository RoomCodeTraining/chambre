name: 'Gestion des utilisateurs'
description: |-

  APIs pour la gestion des utilisateurs
endpoints:
  -
    httpMethods:
      - GET
    uri: api/v1/users
    metadata:
      groupName: 'Gestion des utilisateurs'
      groupDescription: |-

        APIs pour la gestion des utilisateurs
      subgroup: ''
      subgroupDescription: ''
      title: 'Lister les utilisateurs'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 8ke3Zd5gabvEf1Va6DP46hc'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/users/{id}'
    metadata:
      groupName: 'Gestion des utilisateurs'
      groupDescription: |-

        APIs pour la gestion des utilisateurs
      subgroup: ''
      subgroupDescription: ''
      title: 'Afficher un utilisateur'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Pf43vkd1Zg5ah6eEa8bDV6c'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/users
    metadata:
      groupName: 'Gestion des utilisateurs'
      groupDescription: |-

        APIs pour la gestion des utilisateurs
      subgroup: ''
      subgroupDescription: ''
      title: 'Créer un nouvel utilisateur'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      code:
        name: code
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: true
        example: p
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      email:
        name: email
        description: 'Must match the regex /^[a-zA-Z0-9._%+\-]+@[a-zA-Z0-9.\-]+\.[a-zA-Z]{2,}$/. Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: true
        example: mann.terrance@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      first_name:
        name: first_name
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: true
        example: xztja
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      last_name:
        name: last_name
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: true
        example: kdjolqfdsnvomfhokoksjnl
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      telephone:
        name: telephone
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: false
        example: veycnh
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      entity_id:
        name: entity_id
        description: 'The <code>id</code> of an existing record in the entities table.'
        required: true
        example: qui
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      role:
        name: role
        description: 'The <code>name</code> of an existing record in the roles table.'
        required: true
        example: vel
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      password:
        name: password
        description: 'Le texte de value ne peut pas contenir plus de 100 caractères.'
        required: false
        example: '="O[zO}Tl:*5V0@NmV1"'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      code: p
      email: mann.terrance@example.net
      first_name: xztja
      last_name: kdjolqfdsnvomfhokoksjnl
      telephone: veycnh
      entity_id: qui
      role: vel
      password: '="O[zO}Tl:*5V0@NmV1"'
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer kgh84fZVDde1Ecva6b3a6P5'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/users/{id}'
    metadata:
      groupName: 'Gestion des utilisateurs'
      groupDescription: |-

        APIs pour la gestion des utilisateurs
      subgroup: ''
      subgroupDescription: ''
      title: "Mettre à jour un utilisateur les informations de l'utilisateur"
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      code:
        name: code
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: true
        example: auwzl
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      first_name:
        name: first_name
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: true
        example: nelfoug
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      last_name:
        name: last_name
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: true
        example: zcyheomevuefupcbpv
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      email:
        name: email
        description: 'Must match the regex /^[a-zA-Z0-9._%+\-]+@[a-zA-Z0-9.\-]+\.[a-zA-Z]{2,}$/. Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: true
        example: arlie98@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      telephone:
        name: telephone
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: false
        example: itoxvnayhpbyqodqgodmdo
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      role:
        name: role
        description: 'The <code>name</code> of an existing record in the roles table.'
        required: true
        example: voluptatem
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      signature:
        name: signature
        description: 'Le champ value doit être une image. La taille du fichier de value ne peut pas dépasser 2048 kilo-octets.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      code: auwzl
      first_name: nelfoug
      last_name: zcyheomevuefupcbpv
      email: arlie98@example.com
      telephone: itoxvnayhpbyqodqgodmdo
      role: voluptatem
    fileParameters:
      signature: null
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 5v6kcDPZdhfgb1VeE83a46a'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/users/{id}/enable'
    metadata:
      groupName: 'Gestion des utilisateurs'
      groupDescription: |-

        APIs pour la gestion des utilisateurs
      subgroup: ''
      subgroupDescription: ''
      title: 'Activer un utilisateur'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer kgaa45PZbe83h6cvdD1f6EV'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/v1/users/{id}/disable'
    metadata:
      groupName: 'Gestion des utilisateurs'
      groupDescription: |-

        APIs pour la gestion des utilisateurs
      subgroup: ''
      subgroupDescription: ''
      title: 'Désactiver un utilisateur'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 6gkaEvVdPeha53cf18bZD64'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/users/{id}/reset'
    metadata:
      groupName: 'Gestion des utilisateurs'
      groupDescription: |-

        APIs pour la gestion des utilisateurs
      subgroup: ''
      subgroupDescription: ''
      title: "Réinitialiser le mot de passe d'un utilisateur par un administrateur"
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer a8d53EVPfc4vDe1hgakZb66'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/users/update-profile
    metadata:
      groupName: 'Gestion des utilisateurs'
      groupDescription: |-

        APIs pour la gestion des utilisateurs
      subgroup: ''
      subgroupDescription: ''
      title: "Mettre à jour les informations de l'utilisateur de profil de l'utilisateur connecté"
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      code:
        name: code
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: true
        example: vszipxuxidaypkmir
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      first_name:
        name: first_name
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: true
        example: ylitsinpjm
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      last_name:
        name: last_name
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: true
        example: gktdu
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      email:
        name: email
        description: 'Must match the regex /^[a-zA-Z0-9._%+\-]+@[a-zA-Z0-9.\-]+\.[a-zA-Z]{2,}$/. Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: true
        example: bailey.hilario@example.org
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      telephone:
        name: telephone
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: false
        example: rzlmzdgvdsnxtdkmzoqumtp
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      role:
        name: role
        description: 'The <code>name</code> of an existing record in the roles table.'
        required: true
        example: omnis
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      signature:
        name: signature
        description: 'Le champ value doit être une image. La taille du fichier de value ne peut pas dépasser 2048 kilo-octets.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      code: vszipxuxidaypkmir
      first_name: ylitsinpjm
      last_name: gktdu
      email: bailey.hilario@example.org
      telephone: rzlmzdgvdsnxtdkmzoqumtp
      role: omnis
    fileParameters:
      signature: null
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer cfegkDv3E6b5a81ahZ6dPV4'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/v1/users/reset-password
    metadata:
      groupName: 'Gestion des utilisateurs'
      groupDescription: |-

        APIs pour la gestion des utilisateurs
      subgroup: ''
      subgroupDescription: ''
      title: "Réinitialiser le mot de passe d'un utilisateur par lui-même"
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer Vc18vdbD35PeaEghkZ4af66'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/users/{id}/reset-user-password'
    metadata:
      groupName: 'Gestion des utilisateurs'
      groupDescription: |-

        APIs pour la gestion des utilisateurs
      subgroup: ''
      subgroupDescription: ''
      title: "Modifier les informations d'un utilisateur connecté par lui-même"
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: multipart/form-data
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Le champ value doit être une adresse e-mail valide. Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: true
        example: hcollins@example.net
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      first_name:
        name: first_name
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: true
        example: hdybwsiapbubnbxmclhkbdg
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      last_name:
        name: last_name
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: true
        example: htucojpkuwbsuqflgaydm
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: false
        custom: []
      telephone:
        name: telephone
        description: 'Le texte de value ne peut pas contenir plus de 255 caractères.'
        required: false
        example: tjergtjfqznesnqtgcw
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      signature:
        name: signature
        description: 'Le champ value doit être une image. La taille du fichier de value ne peut pas dépasser 2048 kilo-octets.'
        required: false
        example: null
        type: file
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      current_password:
        name: current_password
        description: 'Le texte de value ne peut pas contenir plus de 100 caractères.'
        required: false
        example: qmdvqp
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      password:
        name: password
        description: 'Le texte de value ne peut pas contenir plus de 100 caractères.'
        required: false
        example: 'anpN3rp~/,,N5QjOq'
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
      password_confirmation:
        name: password_confirmation
        description: 'Le texte de value ne peut pas contenir plus de 100 caractères.'
        required: false
        example: zjlwakxryjtikgegfadqafjex
        type: string
        enumValues: []
        exampleWasSpecified: false
        nullable: true
        custom: []
    cleanBodyParameters:
      email: hcollins@example.net
      first_name: hdybwsiapbubnbxmclhkbdg
      last_name: htucojpkuwbsuqflgaydm
      telephone: tjergtjfqznesnqtgcw
      current_password: qmdvqp
      password: 'anpN3rp~/,,N5QjOq'
      password_confirmation: zjlwakxryjtikgegfadqafjex
    fileParameters:
      signature: null
    responses: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer gafdDP6ebc5Z1k3V4E8ha6v'
    controller: null
    method: null
    route: null
    custom: []
